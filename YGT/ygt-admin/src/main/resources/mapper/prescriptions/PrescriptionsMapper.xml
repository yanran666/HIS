<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ygt.prescriptions.mapper.PrescriptionsMapper">
    
    <resultMap type="Prescriptions" id="PrescriptionsResult">
        <result property="prescriptionId"    column="prescription_id"    />
        <result property="appointmentId"    column="appointment_id"    />
        <result property="drugName"    column="drug_name"    />
        <result property="drugSpecification"    column="drug_specification"    />
        <result property="unitPrice"    column="unit_price"    />
        <result property="usage"    column="usage"    />
        <result property="quantity"    column="quantity"    />
    </resultMap>

    <sql id="selectPrescriptionsVo">
        select prescription_id, appointment_id, drug_name, drug_specification, unit_price, `usage`, quantity from prescriptions
    </sql>

    <select id="selectPrescriptionsList" parameterType="Prescriptions" resultMap="PrescriptionsResult">
        <include refid="selectPrescriptionsVo"/>
        <where>  
        </where>
    </select>
    
    <select id="selectPrescriptionsByPrescriptionId" parameterType="Long" resultMap="PrescriptionsResult">
        <include refid="selectPrescriptionsVo"/>
        where prescription_id = #{prescriptionId}
    </select>

    <insert id="insertPrescriptions" parameterType="Prescriptions" useGeneratedKeys="true" keyProperty="prescriptionId">
        <selectKey keyProperty="appointmentId" resultType="java.lang.Long" order="BEFORE">
            SELECT MAX(appointment_id) FROM appointments
        </selectKey>
        insert into prescriptions
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="appointmentId != null">appointment_id,</if>
            <if test="prescriptionsList != null">drug_name,</if>
            <if test="prescriptionsList != null">drug_specification,</if>
            <if test="prescriptionsList != null">unit_price,</if>
            <if test="prescriptionsList != null">`usage`,</if>
         </trim>
        <trim prefix="values">
            <foreach collection="prescriptionsList" item="prescription" separator=",">
                (
                <if test="appointmentId != null">#{appointmentId},</if>
                <if test="prescriptionsList != null">#{prescription.drugName},</if>
                <if test="prescriptionsList != null">#{prescription.drugSpecification},</if>
                <if test="prescriptionsList != null">#{prescription.unitPrice},</if>
                <if test="prescriptionsList != null">#{prescription.usage}</if>
                )
            </foreach>
         </trim>
    </insert>

    <insert id="insertChargesFromPrescriptionAndAppointment" parameterType="Prescriptions">
        insert into charges (
            medical_record_number, patient_name, id_number, age, gender, item_name, unit_price, category, specification, amount, issue_date
        )
        select
            a.medical_record_number,
            a.name as patient_name,
            a.id_number,
            a.age,
            a.gender,
            p.drug_name as item_name,
            p.unit_price,
            '药品' as category,
            p.drug_specification as specifiaction,
            1 as amount,
            now() as issue_date
        from appointments a
                 join prescriptions p on a.appointment_id = p.appointment_id
        where a.appointment_id = #{appointmentId};
    </insert>

    <insert id="insertRefundFromPrescriptionAndAppointment" parameterType="Prescriptions">
        insert into refund (
            medical_record_number, patient_name, id_number, age, gender, item_name, unit_price, category, specification, amount, issue_date
        )
        select
            a.medical_record_number,
            a.name as patient_name,
            a.id_number,
            a.age,
            a.gender,
            p.drug_name as item_name,
            p.unit_price,
            '药品' as category,
            p.drug_specification as specifiaction,
            1 as amount,
            now() as issue_date
        from appointments a
                 join prescriptions p on a.appointment_id = p.appointment_id
        where a.appointment_id = #{appointmentId};
    </insert>

    <insert id="insertFeeRecordsFromPrescriptionAndAppointment" parameterType="Prescriptions">
        insert into fee_records (
            medical_record_number, patient_name, id_number, age, gender, item_name, unit_price, category, specification, amount, issue_date,status
        )
        select
            a.medical_record_number,
            a.name as patient_name,
            a.id_number,
            a.age,
            a.gender,
            p.drug_name as item_name,
            p.unit_price,
            '药品' as category,
            p.drug_specification as specifiaction,
            1 as amount,
            now() as issue_date,
            '已开药' as status
        from appointments a
                 join prescriptions p on a.appointment_id = p.appointment_id
        where a.appointment_id = #{appointmentId};
    </insert>

    <update id="updatePrescriptions" parameterType="Prescriptions">
        update prescriptions
        <trim prefix="SET" suffixOverrides=",">
            <if test="appointmentId != null">appointment_id = #{appointmentId},</if>
            <if test="drugName != null">drug_name = #{drugName},</if>
            <if test="drugSpecification != null">drug_specification = #{drugSpecification},</if>
            <if test="unitPrice != null">unit_price = #{unitPrice},</if>
            <if test="usage != null">`usage` = #{usage},</if>
            <if test="quantity != null">quantity = #{quantity},</if>
        </trim>
        where prescription_id = #{prescriptionId}
    </update>

    <delete id="deletePrescriptionsByPrescriptionId" parameterType="Long">
        delete from prescriptions where prescription_id = #{prescriptionId}
    </delete>

    <delete id="deletePrescriptionsByPrescriptionIds" parameterType="String">
        delete from prescriptions where prescription_id in 
        <foreach item="prescriptionId" collection="array" open="(" separator="," close=")">
            #{prescriptionId}
        </foreach>
    </delete>
</mapper>